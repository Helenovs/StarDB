{"ast":null,"code":"import _classCallCheck from \"/Users/elena/Documents/GA/REACT/star-db/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/elena/Documents/GA/REACT/star-db/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/elena/Documents/GA/REACT/star-db/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/elena/Documents/GA/REACT/star-db/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/elena/Documents/GA/REACT/star-db/node_modules/@babel/runtime/helpers/esm/inherits\";\n\nvar _jsxFileName = \"/Users/elena/Documents/GA/REACT/star-db/src/components/person-details/person-details.js\",\n    _this2 = this;\n\nimport React, { Component } from 'react';\nimport './person-details.css';\nimport SwapiService from \"../../services/swapi-service\";\nimport Spinner from '../spinner';\nimport ErrorIndicator from '../error-indicator';\n\nvar PersonDetails =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PersonDetails, _Component);\n\n  function PersonDetails() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PersonDetails);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PersonDetails)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.swapiService = new SwapiService();\n    _this.state = {\n      person: null,\n      loading: true,\n      error: false\n    };\n\n    _this.onPersonLoaded = function (person) {\n      _this.setState({\n        person: person,\n        loading: false\n      });\n    };\n\n    _this.onError = function (err) {\n      _this.setState({\n        error: true,\n        loading: false\n      });\n    };\n\n    _this.updatePerson = function () {\n      var personId = _this.props.personId;\n\n      if (!personId) {\n        return;\n      }\n\n      _this.swapiService.getPerson(personId).then(_this.onPersonLoaded).catch(_this.onError);\n    };\n\n    return _this;\n  }\n\n  _createClass(PersonDetails, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updatePerson();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.personId !== prevProps.personId) {\n        this.updatePerson();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.state.person) {\n        return React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, \"Select a person from a list\");\n      }\n\n      var _this$state = this.state,\n          person = _this$state.person,\n          loading = _this$state.loading,\n          error = _this$state.error;\n      var errorMessage = error ? React.createElement(ErrorIndicator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }) : null;\n      var spinner = loading ? React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }) : null;\n      var content = !(error || loading) ? React.createElement(PersonView, {\n        person: person,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }) : null;\n      return React.createElement(\"div\", {\n        className: \"person-details card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, spinner, errorMessage, content);\n    }\n  }]);\n\n  return PersonDetails;\n}(Component);\n\n;\n\nvar PersonView = function PersonView(_ref) {\n  var person = _ref.person;\n  // console.log(\"PERSON\", person);\n  var _this2$props$person = _this2.props.person,\n      id = _this2$props$person.id,\n      name = _this2$props$person.name,\n      gender = _this2$props$person.gender,\n      birthYear = _this2$props$person.birthYear,\n      eyeColor = _this2$props$person.eyeColor;\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"person-image\",\n    src: \"https://starwars-visualguide.com/assets/img/characters/\".concat(id, \".jpg\"),\n    alt: \"character\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, name, \" \"), React.createElement(\"ul\", {\n    className: \"list-group list-group-flush\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"list-group-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"term\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Gender\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, gender)), React.createElement(\"li\", {\n    className: \"list-group-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"term\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Birth year\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, birthYear)), React.createElement(\"li\", {\n    className: \"list-group-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"term\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Eye color\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, eyeColor)))));\n};\n\nexport default PersonDetails;","map":{"version":3,"sources":["/Users/elena/Documents/GA/REACT/star-db/src/components/person-details/person-details.js"],"names":["React","Component","SwapiService","Spinner","ErrorIndicator","PersonDetails","swapiService","state","person","loading","error","onPersonLoaded","setState","onError","err","updatePerson","personId","props","getPerson","then","catch","prevProps","errorMessage","spinner","content","PersonView","id","name","gender","birthYear","eyeColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './person-details.css';\nimport SwapiService from \"../../services/swapi-service\";\nimport Spinner from '../spinner';\nimport ErrorIndicator from '../error-indicator';\nclass PersonDetails extends Component {\n  swapiService = new SwapiService();\n  state = {\n    person: null,\n    loading: true,\n    error: false\n  };\n  componentDidMount() {\n    this.updatePerson();\n  }\n  componentDidUpdate(prevProps) {\n    if (this.props.personId !== prevProps.personId) {\n      this.updatePerson();\n    }\n  }\n  onPersonLoaded = (person) => {\n    this.setState({person,\n                  loading: false});\n  }\n  onError = (err) => {\n    this.setState({\n      error: true,\n      loading: false\n    });\n  };\n  // updatePerson() {\n  //   const { personId } = this.props;\n  //   if (!personId) {\n  //     return;\n  //   }\n  //   this.swapiService\n  //   .getPerson(personId)\n  //   .then((person) => {\n  //     this.setState({person});\n  //   })\n  // }\n  updatePerson = () => {\n    const { personId } = this.props;\n    if (!personId) {\n      return;\n    }\n    this.swapiService\n    .getPerson(personId)\n    .then(this.onPersonLoaded)\n    .catch(this.onError);\n  }\n\n  render () {\n    if (!this.state.person) {\n      return <span>Select a person from a list</span>;\n    }\n    const { person, loading, error } = this.state;\n    const errorMessage = error? <ErrorIndicator /> : null;\n    const spinner = loading? <Spinner /> : null;\n    const content = !(error || loading)? <PersonView person= { person }/> : null;\n    return (\n      <div className=\"person-details card\">\n        { spinner }\n        { errorMessage }\n        { content }\n      </div>\n    );\n  }\n};\nconst PersonView = ({person}) => {\n  // console.log(\"PERSON\", person);\n  const { id, name, gender,\n          birthYear, eyeColor } = this.props.person;\n  return(\n    <React.Fragment>\n      <img className=\"person-image\" src={`https://starwars-visualguide.com/assets/img/characters/${id}.jpg`} alt=\"character\"/>\n      <div className=\"card-body\">\n        <h4>{ name } </h4>\n          <ul className=\"list-group list-group-flush\">\n            <li className=\"list-group-item\">\n              <span className=\"term\">Gender</span>\n              <span>{ gender }</span>\n            </li>\n            <li className=\"list-group-item\">\n              <span className=\"term\">Birth year</span>\n              <span>{ birthYear }</span>\n            </li>\n            <li className=\"list-group-item\">\n              <span className=\"term\">Eye color</span>\n              <span>{ eyeColor }</span>\n            </li>\n          </ul>\n      </div>\n    </React.Fragment>\n  );\n\n};\nexport default PersonDetails;\n"]},"metadata":{},"sourceType":"module"}