{"ast":null,"code":"import _regeneratorRuntime from \"/Users/elena/Documents/GA/REACT/star-db/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/elena/Documents/GA/REACT/star-db/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/elena/Documents/GA/REACT/star-db/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/elena/Documents/GA/REACT/star-db/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar SwapiService =\n/*#__PURE__*/\nfunction () {\n  function SwapiService() {\n    _classCallCheck(this, SwapiService);\n\n    this._apiBase = 'https://swapi.co/api';\n  }\n\n  _createClass(SwapiService, [{\n    key: \"getResource\",\n    value: function () {\n      var _getResource = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(url) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"\".concat(this._apiBase).concat(url));\n\n              case 2:\n                res = _context.sent;\n\n                if (res.ok) {\n                  _context.next = 5;\n                  break;\n                }\n\n                throw new Error(\"Could not fetch \".concat(url) + \", received \".concat(res.status));\n\n              case 5:\n                _context.next = 7;\n                return res.json();\n\n              case 7:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getResource(_x) {\n        return _getResource.apply(this, arguments);\n      }\n\n      return getResource;\n    }()\n  }, {\n    key: \"getAllPeople\",\n    value: function getAllPeople() {\n      return this.getResource(\"/people/\");\n    }\n  }, {\n    key: \"getPerson\",\n    value: function getPerson(id) {\n      return this.getResource(\"/people/\".concat(id));\n    }\n  }]);\n\n  return SwapiService;\n}();\n\nvar swapi = new SwapiService();\nswapi.getAllPeople().then(function (body) {\n  console.log(body);\n}); // const getResource = async (url)=> {\n//  const res=await fetch(url);\n//  const body=await res.json();\n//  return body;\n// }\n//\n// fetch('https://swapi.co/api/people/1/')\n//  .then((res)=>{\n//    return res.json();\n//  })\n//  .then ((body)=>{\n//    console.log(body);\n//  })","map":{"version":3,"sources":["/Users/elena/Documents/GA/REACT/star-db/src/index.js"],"names":["SwapiService","_apiBase","url","fetch","res","ok","Error","status","json","getResource","id","swapi","getAllPeople","then","body","console","log"],"mappings":";;;;;IACMA,Y;;;;;;SACJC,Q,GAAW,sB;;;;;;;;gDACOC,G;;;;;;;uBACEC,KAAK,WAAI,KAAKF,QAAT,SAAoBC,GAApB,E;;;AAAjBE,gBAAAA,G;;oBACDA,GAAG,CAACC,E;;;;;sBACD,IAAIC,KAAJ,CAAU,0BAAmBJ,GAAnB,yBAAyCE,GAAG,CAACG,MAA7C,CAAV,C;;;;uBAEKH,GAAG,CAACI,IAAJ,E;;;;;;;;;;;;;;;;;;;;;mCAED;AACZ,aAAO,KAAKC,WAAL,YAAP;AACD;;;8BACSC,E,EAAG;AACX,aAAO,KAAKD,WAAL,mBAA4BC,EAA5B,EAAP;AACD;;;;;;AAEH,IAAMC,KAAK,GAAG,IAAIX,YAAJ,EAAd;AACAW,KAAK,CAACC,YAAN,GAAqBC,IAArB,CAA0B,UAACC,IAAD,EAAU;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,CAFD,E,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\nclass SwapiService {\n  _apiBase = 'https://swapi.co/api';\n  async getResource(url) {\n    const res = await fetch(`${this._apiBase}${url}`);\n    if (!res.ok) {\n      throw new Error(`Could not fetch ${url}` + `, received ${res.status}`)\n    }\n    return await res.json();\n  }\n  getAllPeople(){\n    return this.getResource(`/people/`);\n  }\n  getPerson(id){\n    return this.getResource(`/people/${id}`);\n  }\n}\nconst swapi = new SwapiService();\nswapi.getAllPeople().then((body) => {\n  console.log(body);\n});\n\n// const getResource = async (url)=> {\n//  const res=await fetch(url);\n//  const body=await res.json();\n//  return body;\n// }\n//\n// fetch('https://swapi.co/api/people/1/')\n//  .then((res)=>{\n//    return res.json();\n//  })\n//  .then ((body)=>{\n//    console.log(body);\n//  })\n"]},"metadata":{},"sourceType":"module"}