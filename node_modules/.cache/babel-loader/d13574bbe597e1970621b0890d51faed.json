{"ast":null,"code":"import _classCallCheck from \"/Users/elena/Documents/GA/REACT/star-db/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/elena/Documents/GA/REACT/star-db/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/elena/Documents/GA/REACT/star-db/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/elena/Documents/GA/REACT/star-db/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/elena/Documents/GA/REACT/star-db/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/elena/Documents/GA/REACT/star-db/src/components/item-details/item-details.js\";\nimport React, { Component } from 'react';\nimport './item-details.css';\nimport SwapiService from \"../../services/swapi-service\";\nimport Spinner from '../spinner';\nimport ErrorIndicator from '../error-indicator';\n\nvar ItemDetails =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ItemDetails, _Component);\n\n  function ItemDetails() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ItemDetails);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ItemDetails)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.swapiService = new SwapiService();\n    _this.state = {\n      item: null,\n      loading: true,\n      error: false\n    };\n\n    _this.onItemLoaded = function (item) {\n      _this.setState({\n        item: item,\n        loading: false\n      });\n    };\n\n    _this.onError = function (err) {\n      _this.setState({\n        error: true,\n        loading: false\n      });\n    };\n\n    _this.updateItem = function () {\n      var itemId = _this.props.itemId;\n\n      if (!itemId) {\n        return;\n      }\n\n      _this.swapiService.getPerson(itemId).then(_this.onItemLoaded).catch(_this.onError);\n    };\n\n    return _this;\n  }\n\n  _createClass(ItemDetails, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateItem();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.itemId !== prevProps.itemId) {\n        this.updateItem();\n      }\n    } /////////////////////first solution/////////////////////\n    //   updatePerson() {\n    //     const { personId } = this.props;\n    //     if (!personId) {\n    //       return;\n    //     }\n    //     this.swapiService\n    //     .getPerson(personId)\n    //     .then((person) => {\n    //       this.setState({person});\n    //     })\n    //   }\n    //\n    //\n    //   render () {\n    //     if (!this.state.person) {\n    //       return <span>Select a person from a list</span>;\n    //     }\n    //     const { id, name, gender,\n    //             birthYear, eyeColor } = this.state.person;\n    //     return (\n    //       <div className=\"person-details card\">\n    //         <img className=\"person-image\" src={`https://starwars-visualguide.com/assets/img/characters/${id}.jpg`} alt=\"character\"/>\n    //         <div className=\"card-body\">\n    //           <h4>{ name }</h4>\n    //             <ul className=\"list-group list-group-flush\">\n    //               <li className=\"list-group-item\">\n    //                 <span className=\"term\">Gender</span>\n    //                 <span>{ gender }</span>\n    //               </li>\n    //               <li className=\"list-group-item\">\n    //                 <span className=\"term\">Birth year</span>\n    //                 <span>{ birthYear }</span>\n    //               </li>\n    //               <li className=\"list-group-item\">\n    //                 <span className=\"term\">Eye color</span>\n    //                 <span>{ eyeColor }</span>\n    //               </li>\n    //             </ul>\n    //         </div>\n    //       </div>\n    //     );\n    //   }\n    // };\n    //\n    // export default ItemDetails;\n    // second solution\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.state.item) {\n        return React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, \"Select an item from a list\");\n      }\n\n      var _this$state = this.state,\n          item = _this$state.item,\n          loading = _this$state.loading,\n          error = _this$state.error;\n      var errorMessage = error ? React.createElement(ErrorIndicator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }) : null;\n      var spinner = loading ? React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }) : null;\n      var content = !(error || loading) ? React.createElement(ItemView, {\n        item: item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }) : null;\n      return React.createElement(\"div\", {\n        className: \"person-details card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, spinner, errorMessage, content);\n    }\n  }]);\n\n  return ItemDetails;\n}(Component);\n\n;\n\nvar ItemView = function ItemView(_ref) {\n  var item = _ref.item;\n  var id = item.id,\n      name = item.name,\n      gender = item.gender,\n      birthYear = item.birthYear,\n      eyeColor = item.eyeColor;\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"person-image\",\n    src: \"https://starwars-visualguide.com/assets/img/characters/\".concat(id, \".jpg\"),\n    alt: \"character\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, name), React.createElement(\"ul\", {\n    className: \"list-group list-group-flush\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"list-group-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"term\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"Gender\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, gender)), React.createElement(\"li\", {\n    className: \"list-group-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"term\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, \"Birth year\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, birthYear)), React.createElement(\"li\", {\n    className: \"list-group-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"term\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, \"Eye color\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, eyeColor)))));\n};\n\nexport default ItemDetails;","map":{"version":3,"sources":["/Users/elena/Documents/GA/REACT/star-db/src/components/item-details/item-details.js"],"names":["React","Component","SwapiService","Spinner","ErrorIndicator","ItemDetails","swapiService","state","item","loading","error","onItemLoaded","setState","onError","err","updateItem","itemId","props","getPerson","then","catch","prevProps","errorMessage","spinner","content","ItemView","id","name","gender","birthYear","eyeColor"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,oBAAP;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,cAAP,MAA2B,oBAA3B;;IACMC,W;;;;;;;;;;;;;;;;;UACJC,Y,GAAe,IAAIJ,YAAJ,E;UACfK,K,GAAQ;AACNC,MAAAA,IAAI,EAAE,IADA;AAENC,MAAAA,OAAO,EAAE,IAFH;AAGNC,MAAAA,KAAK,EAAE;AAHD,K;;UA4ERC,Y,GAAe,UAACH,IAAD,EAAU;AACvB,YAAKI,QAAL,CAAc;AAACJ,QAAAA,IAAI,EAAJA,IAAD;AACAC,QAAAA,OAAO,EAAE;AADT,OAAd;AAED,K;;UACDI,O,GAAU,UAACC,GAAD,EAAS;AACjB,YAAKF,QAAL,CAAc;AACZF,QAAAA,KAAK,EAAE,IADK;AAEZD,QAAAA,OAAO,EAAE;AAFG,OAAd;AAID,K;;UAYDM,U,GAAa,YAAM;AAAA,UACTC,MADS,GACE,MAAKC,KADP,CACTD,MADS;;AAEjB,UAAI,CAACA,MAAL,EAAa;AACX;AACD;;AACD,YAAKV,YAAL,CACCY,SADD,CACWF,MADX,EAECG,IAFD,CAEM,MAAKR,YAFX,EAGCS,KAHD,CAGO,MAAKP,OAHZ;AAID,K;;;;;;;wCArGmB;AAClB,WAAKE,UAAL;AACD;;;uCACkBM,S,EAAW;AAC5B,UAAI,KAAKJ,KAAL,CAAWD,MAAX,KAAsBK,SAAS,CAACL,MAApC,EAA4C;AAC1C,aAAKD,UAAL;AACD;AACF,K,CAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAgBA;;;;6BAiCY;AACR,UAAI,CAAC,KAAKR,KAAL,CAAWC,IAAhB,EAAsB;AACpB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAAP;AACD;;AAHO,wBAIyB,KAAKD,KAJ9B;AAAA,UAIAC,IAJA,eAIAA,IAJA;AAAA,UAIMC,OAJN,eAIMA,OAJN;AAAA,UAIeC,KAJf,eAIeA,KAJf;AAKR,UAAMY,YAAY,GAAGZ,KAAK,GAAE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAF,GAAuB,IAAjD;AACA,UAAMa,OAAO,GAAGd,OAAO,GAAE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAF,GAAgB,IAAvC;AACA,UAAMe,OAAO,GAAG,EAAEd,KAAK,IAAID,OAAX,IAAqB,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAID,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAArB,GAAkD,IAAlE;AACA,aACE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACIe,OADJ,EAEID,YAFJ,EAGIE,OAHJ,CADF;AAOD;;;;EA7HuBvB,S;;AA8HzB;;AACD,IAAMwB,QAAQ,GAAG,SAAXA,QAAW,OAAc;AAAA,MAAXjB,IAAW,QAAXA,IAAW;AAAA,MACrBkB,EADqB,GAEGlB,IAFH,CACrBkB,EADqB;AAAA,MACjBC,IADiB,GAEGnB,IAFH,CACjBmB,IADiB;AAAA,MACXC,MADW,GAEGpB,IAFH,CACXoB,MADW;AAAA,MAErBC,SAFqB,GAEGrB,IAFH,CAErBqB,SAFqB;AAAA,MAEVC,QAFU,GAEGtB,IAFH,CAEVsB,QAFU;AAG7B,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAA8B,IAAA,GAAG,mEAA4DJ,EAA5D,SAAjC;AAAuG,IAAA,GAAG,EAAC,WAA3G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMC,IAAN,CADF,EAEI;AAAI,IAAA,SAAS,EAAC,6BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQC,MAAR,CAFF,CADF,EAKE;AAAI,IAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQC,SAAR,CAFF,CALF,EASE;AAAI,IAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQC,QAAR,CAFF,CATF,CAFJ,CAFF,CADF;AAuBD,CA1BD;;AA2BA,eAAezB,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport './item-details.css';\nimport SwapiService from \"../../services/swapi-service\";\nimport Spinner from '../spinner';\nimport ErrorIndicator from '../error-indicator';\nclass ItemDetails extends Component {\n  swapiService = new SwapiService();\n  state = {\n    item: null,\n    loading: true,\n    error: false\n  };\n  componentDidMount() {\n    this.updateItem();\n  }\n  componentDidUpdate(prevProps) {\n    if (this.props.itemId !== prevProps.itemId) {\n      this.updateItem();\n    }\n  }\n\n/////////////////////first solution/////////////////////\n//   updatePerson() {\n//     const { personId } = this.props;\n//     if (!personId) {\n//       return;\n//     }\n//     this.swapiService\n//     .getPerson(personId)\n//     .then((person) => {\n//       this.setState({person});\n//     })\n//   }\n//\n//\n//   render () {\n//     if (!this.state.person) {\n//       return <span>Select a person from a list</span>;\n//     }\n//     const { id, name, gender,\n//             birthYear, eyeColor } = this.state.person;\n//     return (\n//       <div className=\"person-details card\">\n//         <img className=\"person-image\" src={`https://starwars-visualguide.com/assets/img/characters/${id}.jpg`} alt=\"character\"/>\n//         <div className=\"card-body\">\n//           <h4>{ name }</h4>\n//             <ul className=\"list-group list-group-flush\">\n//               <li className=\"list-group-item\">\n//                 <span className=\"term\">Gender</span>\n//                 <span>{ gender }</span>\n//               </li>\n//               <li className=\"list-group-item\">\n//                 <span className=\"term\">Birth year</span>\n//                 <span>{ birthYear }</span>\n//               </li>\n//               <li className=\"list-group-item\">\n//                 <span className=\"term\">Eye color</span>\n//                 <span>{ eyeColor }</span>\n//               </li>\n//             </ul>\n//         </div>\n//       </div>\n//     );\n//   }\n// };\n//\n// export default ItemDetails;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// second solution\n  onItemLoaded = (item) => {\n    this.setState({item,\n                  loading: false});\n  }\n  onError = (err) => {\n    this.setState({\n      error: true,\n      loading: false\n    });\n  };\n  // updatePerson() {\n  //   const { personId } = this.props;\n  //   if (!personId) {\n  //     return;\n  //   }\n  //   this.swapiService\n  //   .getPerson(personId)\n  //   .then((person) => {\n  //     this.setState({person});\n  //   })\n  // }\n  updateItem = () => {\n    const { itemId } = this.props;\n    if (!itemId) {\n      return;\n    }\n    this.swapiService\n    .getPerson(itemId)\n    .then(this.onItemLoaded)\n    .catch(this.onError);\n  }\n\n  render () {\n    if (!this.state.item) {\n      return <span>Select an item from a list</span>;\n    }\n    const { item, loading, error } = this.state;\n    const errorMessage = error? <ErrorIndicator /> : null;\n    const spinner = loading? <Spinner /> : null;\n    const content = !(error || loading)? <ItemView item= { item }/> : null;\n    return (\n      <div className=\"person-details card\">\n        { spinner }\n        { errorMessage }\n        { content }\n      </div>\n    );\n  }\n};\nconst ItemView = ( {item} ) => {\n  const { id, name, gender,\n          birthYear, eyeColor } = item;\n  return(\n    <React.Fragment>\n      <img className=\"person-image\" src={`https://starwars-visualguide.com/assets/img/characters/${id}.jpg`} alt=\"character\"/>\n      <div className=\"card-body\">\n        <h4>{ name }</h4>\n          <ul className=\"list-group list-group-flush\">\n            <li className=\"list-group-item\">\n              <span className=\"term\">Gender</span>\n              <span>{ gender }</span>\n            </li>\n            <li className=\"list-group-item\">\n              <span className=\"term\">Birth year</span>\n              <span>{ birthYear }</span>\n            </li>\n            <li className=\"list-group-item\">\n              <span className=\"term\">Eye color</span>\n              <span>{ eyeColor }</span>\n            </li>\n          </ul>\n      </div>\n    </React.Fragment>\n  );\n\n};\nexport default ItemDetails;\n"]},"metadata":{},"sourceType":"module"}