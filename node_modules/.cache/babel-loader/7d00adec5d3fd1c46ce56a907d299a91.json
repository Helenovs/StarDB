{"ast":null,"code":"import _classCallCheck from \"/Users/elena/Documents/GA/REACT/star-db/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/elena/Documents/GA/REACT/star-db/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/elena/Documents/GA/REACT/star-db/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/elena/Documents/GA/REACT/star-db/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/elena/Documents/GA/REACT/star-db/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/elena/Documents/GA/REACT/star-db/src/components/person-details/person-details.js\";\nimport React, { Component } from 'react';\nimport './person-details.css';\nimport SwapiService from \"../../services/swapi-service\";\nimport Spinner from '../spinner';\nimport ErrorIndicator from '../error-indicator';\n\nvar PersonDetails =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PersonDetails, _Component);\n\n  function PersonDetails() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PersonDetails);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PersonDetails)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.swapiService = new SwapiService();\n    _this.state = {\n      person: null,\n      loading: true,\n      error: false\n    };\n    return _this;\n  }\n\n  _createClass(PersonDetails, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updatePerson();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.personId !== prevProps.personId) {\n        this.updatePerson();\n      }\n    }\n  }, {\n    key: \"updatePerson\",\n    value: function updatePerson() {\n      var _this2 = this;\n\n      var personId = this.props.personId;\n\n      if (!personId) {\n        return;\n      }\n\n      this.swapiService.getPerson(personId).then(function (person) {\n        _this2.setState({\n          person: person\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.state.person) {\n        return React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        });\n      }\n\n      var _this$state$person = this.state.person,\n          id = _this$state$person.id,\n          name = _this$state$person.name,\n          gender = _this$state$person.gender,\n          birthYear = _this$state$person.birthYear,\n          eyeColor = _this$state$person.eyeColor;\n      return React.createElement(\"div\", {\n        className: \"person-details card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"person-image\",\n        src: \"https://starwars-visualguide.com/assets/img/characters/\".concat(id, \".jpg\"),\n        alt: \"character\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, name), React.createElement(\"ul\", {\n        className: \"list-group list-group-flush\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"term\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Gender\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, gender)), React.createElement(\"li\", {\n        className: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"term\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Birth year\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, birthYear)), React.createElement(\"li\", {\n        className: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"term\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Eye color\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, eyeColor)))));\n    }\n  }]);\n\n  return PersonDetails;\n}(Component);\n\n;\nexport default PersonDetails; // second solution\n//   onPersonLoaded = (person) => {\n//     this.setState({person,\n//                   loading: false});\n//   }\n//   onError = (err) => {\n//     this.setState({\n//       error: true,\n//       loading: false\n//     });\n//   };\n//   // updatePerson() {\n//   //   const { personId } = this.props;\n//   //   if (!personId) {\n//   //     return;\n//   //   }\n//   //   this.swapiService\n//   //   .getPerson(personId)\n//   //   .then((person) => {\n//   //     this.setState({person});\n//   //   })\n//   // }\n//   updatePerson = () => {\n//     const { personId } = this.props;\n//     if (!personId) {\n//       return;\n//     }\n//     this.swapiService\n//     .getPerson(personId)\n//     .then(this.onPersonLoaded)\n//     .catch(this.onError);\n//   }\n//\n//   render () {\n//     if (!this.state.person) {\n//       return <span>Select a person from a list</span>;\n//     }\n//     const { person, loading, error } = this.state;\n//     const errorMessage = error? <ErrorIndicator /> : null;\n//     const spinner = loading? <Spinner /> : null;\n//     const content = !(error || loading)? <PersonView person= { person }/> : null;\n//     return (\n//       <div className=\"person-details card\">\n//         { spinner }\n//         { errorMessage }\n//         { content }\n//       </div>\n//     );\n//   }\n// };\n// const PersonView = ( {person} ) => {\n//   console.log(\"PERSON\", person);\n//   const { id, name, gender,\n//           birthYear, eyeColor } = person;\n//   return(\n//     <React.Fragment>\n//       <img className=\"person-image\" src={`https://starwars-visualguide.com/assets/img/characters/${id}.jpg`} alt=\"character\"/>\n//       <div className=\"card-body\">\n//         <h4>{ name }</h4>\n//           <ul className=\"list-group list-group-flush\">\n//             <li className=\"list-group-item\">\n//               <span className=\"term\">Gender</span>\n//               <span>{ gender }</span>\n//             </li>\n//             <li className=\"list-group-item\">\n//               <span className=\"term\">Birth year</span>\n//               <span>{ birthYear }</span>\n//             </li>\n//             <li className=\"list-group-item\">\n//               <span className=\"term\">Eye color</span>\n//               <span>{ eyeColor }</span>\n//             </li>\n//           </ul>\n//       </div>\n//     </React.Fragment>\n//   );\n//\n// };\n// export default PersonDetails;","map":{"version":3,"sources":["/Users/elena/Documents/GA/REACT/star-db/src/components/person-details/person-details.js"],"names":["React","Component","SwapiService","Spinner","ErrorIndicator","PersonDetails","swapiService","state","person","loading","error","updatePerson","prevProps","props","personId","getPerson","then","setState","id","name","gender","birthYear","eyeColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './person-details.css';\nimport SwapiService from \"../../services/swapi-service\";\nimport Spinner from '../spinner';\nimport ErrorIndicator from '../error-indicator';\nclass PersonDetails extends Component {\n  swapiService = new SwapiService();\n  state = {\n    person: null,\n    loading: true,\n    error: false\n  };\n  componentDidMount() {\n    this.updatePerson();\n  }\n  componentDidUpdate(prevProps) {\n    if (this.props.personId !== prevProps.personId) {\n      this.updatePerson();\n    }\n  }\n\n\n  updatePerson() {\n    const { personId } = this.props;\n    if (!personId) {\n      return;\n    }\n    this.swapiService\n    .getPerson(personId)\n    .then((person) => {\n      this.setState({person});\n    })\n  }\n\n\n  render () {\n    if (!this.state.person) {\n      return  <Spinner />;\n    }\n    const { id, name, gender,\n            birthYear, eyeColor } = this.state.person;\n    return (\n      <div className=\"person-details card\">\n        <img className=\"person-image\" src={`https://starwars-visualguide.com/assets/img/characters/${id}.jpg`} alt=\"character\"/>\n        <div className=\"card-body\">\n          <h4>{ name }</h4>\n            <ul className=\"list-group list-group-flush\">\n              <li className=\"list-group-item\">\n                <span className=\"term\">Gender</span>\n                <span>{ gender }</span>\n              </li>\n              <li className=\"list-group-item\">\n                <span className=\"term\">Birth year</span>\n                <span>{ birthYear }</span>\n              </li>\n              <li className=\"list-group-item\">\n                <span className=\"term\">Eye color</span>\n                <span>{ eyeColor }</span>\n              </li>\n            </ul>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default PersonDetails;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// second solution\n//   onPersonLoaded = (person) => {\n//     this.setState({person,\n//                   loading: false});\n//   }\n//   onError = (err) => {\n//     this.setState({\n//       error: true,\n//       loading: false\n//     });\n//   };\n//   // updatePerson() {\n//   //   const { personId } = this.props;\n//   //   if (!personId) {\n//   //     return;\n//   //   }\n//   //   this.swapiService\n//   //   .getPerson(personId)\n//   //   .then((person) => {\n//   //     this.setState({person});\n//   //   })\n//   // }\n//   updatePerson = () => {\n//     const { personId } = this.props;\n//     if (!personId) {\n//       return;\n//     }\n//     this.swapiService\n//     .getPerson(personId)\n//     .then(this.onPersonLoaded)\n//     .catch(this.onError);\n//   }\n//\n//   render () {\n//     if (!this.state.person) {\n//       return <span>Select a person from a list</span>;\n//     }\n//     const { person, loading, error } = this.state;\n//     const errorMessage = error? <ErrorIndicator /> : null;\n//     const spinner = loading? <Spinner /> : null;\n//     const content = !(error || loading)? <PersonView person= { person }/> : null;\n//     return (\n//       <div className=\"person-details card\">\n//         { spinner }\n//         { errorMessage }\n//         { content }\n//       </div>\n//     );\n//   }\n// };\n// const PersonView = ( {person} ) => {\n//   console.log(\"PERSON\", person);\n//   const { id, name, gender,\n//           birthYear, eyeColor } = person;\n//   return(\n//     <React.Fragment>\n//       <img className=\"person-image\" src={`https://starwars-visualguide.com/assets/img/characters/${id}.jpg`} alt=\"character\"/>\n//       <div className=\"card-body\">\n//         <h4>{ name }</h4>\n//           <ul className=\"list-group list-group-flush\">\n//             <li className=\"list-group-item\">\n//               <span className=\"term\">Gender</span>\n//               <span>{ gender }</span>\n//             </li>\n//             <li className=\"list-group-item\">\n//               <span className=\"term\">Birth year</span>\n//               <span>{ birthYear }</span>\n//             </li>\n//             <li className=\"list-group-item\">\n//               <span className=\"term\">Eye color</span>\n//               <span>{ eyeColor }</span>\n//             </li>\n//           </ul>\n//       </div>\n//     </React.Fragment>\n//   );\n//\n// };\n// export default PersonDetails;\n"]},"metadata":{},"sourceType":"module"}