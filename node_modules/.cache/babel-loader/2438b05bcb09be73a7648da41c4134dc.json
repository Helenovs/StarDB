{"ast":null,"code":"import _classCallCheck from \"/Users/elena/Documents/GA/REACT/star-db/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/elena/Documents/GA/REACT/star-db/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/elena/Documents/GA/REACT/star-db/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/elena/Documents/GA/REACT/star-db/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/elena/Documents/GA/REACT/star-db/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/elena/Documents/GA/REACT/star-db/src/components/random-planet/random-planet.js\";\nimport React, { Component } from 'react';\nimport SwapiService from \"../../services/swapi-service\";\nimport './random-planet.css';\n\nvar RandomPlanet =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RandomPlanet, _Component);\n\n  function RandomPlanet() {\n    var _this;\n\n    _classCallCheck(this, RandomPlanet);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RandomPlanet).call(this));\n    _this.swapiService = new SwapiService();\n    _this.state = {\n      name: null,\n      population: null,\n      rotationPeriod: null,\n      diameter: null\n    };\n\n    _this.updatePlanet();\n\n    return _this;\n  }\n\n  _createClass(RandomPlanet, [{\n    key: \"updatePlanet\",\n    value: function updatePlanet() {\n      this.swapiService.getPlanet(7).then(function (planet) {\n        console.log(planet); //   this.setState({name: planet.name,\n        //   population: null,\n        //   rotationPeriod: null,\n        //   diameter: null})\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          name = _this$state.name,\n          population = _this$state.population,\n          rotationPeriod = _this$state.rotationPeriod,\n          diameter = _this$state.diameter;\n      return React.createElement(\"div\", {\n        className: \"random-planet jumbotron rounded\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"planet-image\",\n        src: \"http://starwars-visualguide.com/assets/image/planets/5.jpg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, name), React.createElement(\"ul\", {\n        className: \"list-group list-group-flush\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"term\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Population\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, population)), React.createElement(\"li\", {\n        className: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"term\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Rotation Period\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, rotationPeriod)), React.createElement(\"li\", {\n        className: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"term\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Diameter\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, diameter)))));\n    }\n  }]);\n\n  return RandomPlanet;\n}(Component);\n\n;\nexport default RandomPlanet;","map":{"version":3,"sources":["/Users/elena/Documents/GA/REACT/star-db/src/components/random-planet/random-planet.js"],"names":["React","Component","SwapiService","RandomPlanet","swapiService","state","name","population","rotationPeriod","diameter","updatePlanet","getPlanet","then","planet","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAO,qBAAP;;IACOC,Y;;;;;AAEL,0BAAa;AAAA;;AAAA;;AACX;AADW,UADbC,YACa,GADE,IAAIF,YAAJ,EACF;AAEX,UAAKG,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,IADK;AAEXC,MAAAA,UAAU,EAAE,IAFD;AAGXC,MAAAA,cAAc,EAAE,IAHL;AAIXC,MAAAA,QAAQ,EAAE;AAJC,KAAb;;AAMA,UAAKC,YAAL;;AARW;AASZ;;;;mCACc;AACb,WAAKN,YAAL,CAAkBO,SAAlB,CAA4B,CAA5B,EAA+BC,IAA/B,CAAoC,UAACC,MAAD,EAAY;AAC9CC,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,EAD8C,CAEhD;AACA;AACA;AACA;AACC,OAND;AAQD;;;6BACO;AAAA,wBACiD,KAAKR,KADtD;AAAA,UACEC,IADF,eACEA,IADF;AAAA,UACQC,UADR,eACQA,UADR;AAAA,UACoBC,cADpB,eACoBA,cADpB;AAAA,UACoCC,QADpC,eACoCA,QADpC;AAEN,aACE;AAAK,QAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,cAAf;AAA8B,QAAA,GAAG,EAAC,4DAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMH,IAAN,CADF,EAEE;AAAI,QAAA,SAAS,EAAC,6BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQC,UAAR,CAFF,CADA,EAME;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQC,cAAR,CAFF,CANF,EAWE;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQC,QAAR,CAFF,CAXF,CAFF,CAFA,CADF;AAyBD;;;;EAjDyBR,S;;AAmD3B;AACD,eAAeE,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport SwapiService from \"../../services/swapi-service\"\nimport './random-planet.css';\nclass  RandomPlanet extends Component {\n  swapiService = new SwapiService();\n  constructor(){\n    super();\n    this.state = {\n      name: null,\n      population: null,\n      rotationPeriod: null,\n      diameter: null\n    };\n    this.updatePlanet();\n  }\n  updatePlanet() {\n    this.swapiService.getPlanet(7).then((planet) => {\n      console.log(planet);\n    //   this.setState({name: planet.name,\n    //   population: null,\n    //   rotationPeriod: null,\n    //   diameter: null})\n    })\n\n  }\n  render(){\n    const { name, population, rotationPeriod, diameter } = this.state;\n    return(\n      <div className=\"random-planet jumbotron rounded\">\n      <img className=\"planet-image\" src=\"http://starwars-visualguide.com/assets/image/planets/5.jpg\" />\n      <div>\n        <h4>{ name }</h4>\n        <ul className=\"list-group list-group-flush\">\n        <li className=\"list-group-item\">\n          <span className=\"term\">Population</span>\n          <span>{ population }</span>\n        </li>\n\n          <li className=\"list-group-item\">\n            <span className=\"term\">Rotation Period</span>\n            <span>{ rotationPeriod }</span>\n          </li>\n\n          <li className=\"list-group-item\">\n            <span className=\"term\">Diameter</span>\n            <span>{ diameter }</span>\n          </li>\n          </ul>\n      </div>\n      </div>\n\n    );\n  }\n\n};\nexport default RandomPlanet;\n"]},"metadata":{},"sourceType":"module"}