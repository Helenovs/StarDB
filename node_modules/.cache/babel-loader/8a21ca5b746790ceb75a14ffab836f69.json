{"ast":null,"code":"import _classCallCheck from \"/Users/elena/Documents/GA/REACT/star-db/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/elena/Documents/GA/REACT/star-db/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/elena/Documents/GA/REACT/star-db/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/elena/Documents/GA/REACT/star-db/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/elena/Documents/GA/REACT/star-db/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/elena/Documents/GA/REACT/star-db/src/components/people-page/people-page.js\";\nimport React, { Component } from 'react';\nimport SwapiService from \"../../services/swapi-service\";\nimport './people-page.css';\nimport ItemList from '../item-list';\nimport PersonDetails from '../person-details';\nimport ErrorIndicator from '../error-indicator';\nimport ErrorButton from '../error-button';\n\nvar PeoplePage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PeoplePage, _Component);\n\n  function PeoplePage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PeoplePage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PeoplePage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.swapiService = new SwapiService();\n    _this.state = {\n      hasError: false,\n      selectedPerson: 3\n    };\n\n    _this.onPersonSelected = function (id) {\n      _this.setState({\n        selectedPerson: id\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(PeoplePage, [{\n    key: \"componentDidCatch\",\n    value: function componentDidCatch() {\n      this.setState({\n        hasError: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.hasError) {\n        return React.createElement(ErrorIndicator, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row mb2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(ItemList, {\n        onItemSelected: this.onPersonSelected,\n        getData: this.swapiService.getAllPeople,\n        renderItem: function renderItem(_ref) {\n          var name = _ref.name,\n              gender = _ref.gender,\n              birthYear = _ref.birthYear;\n          return \"\".concat(name, \" (\").concat(gender, \", \").concat(birthYear, \")\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(PersonDetails, {\n        personId: this.state.selectedPerson,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }))), React.createElement(ErrorButton, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return PeoplePage;\n}(Component);\n\nexport { PeoplePage as default };","map":{"version":3,"sources":["/Users/elena/Documents/GA/REACT/star-db/src/components/people-page/people-page.js"],"names":["React","Component","SwapiService","ItemList","PersonDetails","ErrorIndicator","ErrorButton","PeoplePage","swapiService","state","hasError","selectedPerson","onPersonSelected","id","setState","getAllPeople","name","gender","birthYear"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAO,mBAAP;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAOC,aAAP,MAA0B,mBAA1B;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AACA,OAAOC,WAAP,MAAwB,iBAAxB;;IACsBC,U;;;;;;;;;;;;;;;;;UACnBC,Y,GAAe,IAAIN,YAAJ,E;UACfO,K,GAAO;AACLC,MAAAA,QAAQ,EAAE,KADL;AAELC,MAAAA,cAAc,EAAE;AAFX,K;;UAIPC,gB,GAAmB,UAACC,EAAD,EAAQ;AACzB,YAAKC,QAAL,CAAc;AACZH,QAAAA,cAAc,EAAEE;AADJ,OAAd;AAGD,K;;;;;;;wCACmB;AAClB,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACD;;;6BACO;AACN,UAAI,KAAKD,KAAL,CAAWC,QAAf,EAAyB;AACvB,eAAO,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AACD,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAU,QAAA,cAAc,EAAI,KAAKE,gBAAjC;AACU,QAAA,OAAO,EAAI,KAAKJ,YAAL,CAAkBO,YADvC;AAEU,QAAA,UAAU,EAAI;AAAA,cAAGC,IAAH,QAAGA,IAAH;AAAA,cAASC,MAAT,QAASA,MAAT;AAAA,cAAiBC,SAAjB,QAAiBA,SAAjB;AAAA,2BAAmCF,IAAnC,eAA4CC,MAA5C,eAAuDC,SAAvD;AAAA,SAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAME;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,aAAD;AAAe,QAAA,QAAQ,EAAE,KAAKT,KAAL,CAAWE,cAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CANF,CADF,EAWE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXF,CADF;AAeD;;;;EAjCqCV,S;;SAAnBM,U","sourcesContent":["import React, { Component} from 'react';\nimport SwapiService from \"../../services/swapi-service\";\nimport './people-page.css';\nimport ItemList from '../item-list';\nimport PersonDetails from '../person-details';\nimport ErrorIndicator from '../error-indicator';\nimport ErrorButton from '../error-button';\n export default class PeoplePage extends Component {\n   swapiService = new SwapiService();\n   state ={\n     hasError: false,\n     selectedPerson: 3\n   }\n   onPersonSelected = (id) => {\n     this.setState({\n       selectedPerson: id\n     });\n   };\n   componentDidCatch() {\n     this.setState({ hasError: true })\n   }\n   render(){\n     if (this.state.hasError) {\n       return <ErrorIndicator />\n     }\n     return(\n       <div>\n         <div className=\"row mb2\">\n           <div className=\"col-md-6\">\n             <ItemList onItemSelected = {this.onPersonSelected}\n                       getData = {this.swapiService.getAllPeople}\n                       renderItem = {({ name, gender, birthYear}) => `${name} (${gender}, ${birthYear})`} />\n           </div>\n           <div className=\"col-md-6\">\n             <PersonDetails personId={this.state.selectedPerson}/>\n           </div>\n         </div>\n         <ErrorButton />\n       </div>\n     );\n   }\n }\n"]},"metadata":{},"sourceType":"module"}