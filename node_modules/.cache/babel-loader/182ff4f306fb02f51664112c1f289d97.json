{"ast":null,"code":"import _regeneratorRuntime from \"/Users/elena/Documents/GA/REACT/star-db/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/elena/Documents/GA/REACT/star-db/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/elena/Documents/GA/REACT/star-db/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/elena/Documents/GA/REACT/star-db/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar SwapiService =\n/*#__PURE__*/\nfunction () {\n  function SwapiService() {\n    _classCallCheck(this, SwapiService);\n\n    this._apiBase = 'https://swapi.co/api';\n  }\n\n  _createClass(SwapiService, [{\n    key: \"getResource\",\n    value: function () {\n      var _getResource = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(url) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"\".concat(this._apiBase).concat(url));\n\n              case 2:\n                res = _context.sent;\n\n                if (res.ok) {\n                  _context.next = 5;\n                  break;\n                }\n\n                throw new Error(\"Could not fetch \".concat(url) + \", received \".concat(res.status));\n\n              case 5:\n                _context.next = 7;\n                return res.json();\n\n              case 7:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getResource(_x) {\n        return _getResource.apply(this, arguments);\n      }\n\n      return getResource;\n    }()\n  }, {\n    key: \"getAllPeople\",\n    value: function () {\n      var _getAllPeople = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.getResource(\"/people/\");\n\n              case 2:\n                res = _context2.sent;\n                return _context2.abrupt(\"return\", res.results);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getAllPeople() {\n        return _getAllPeople.apply(this, arguments);\n      }\n\n      return getAllPeople;\n    }()\n  }, {\n    key: \"getPerson\",\n    value: function getPerson(id) {\n      return this.getResource(\"/people/\".concat(id));\n    }\n  }, {\n    key: \"getAllPlanets\",\n    value: function () {\n      var _getAllPlanets = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.getResource(\"/planets/\");\n\n              case 2:\n                res = _context3.sent;\n                return _context3.abrupt(\"return\", res.results);\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getAllPlanets() {\n        return _getAllPlanets.apply(this, arguments);\n      }\n\n      return getAllPlanets;\n    }()\n  }, {\n    key: \"getPlanet\",\n    value: function getPlanet(id) {\n      return this.getResource(\"/planets/\".concat(id));\n    }\n  }, {\n    key: \"getAllStarShip\",\n    value: function () {\n      var _getAllStarShip = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.getResource(\"/starships/\");\n\n              case 2:\n                res = _context4.sent;\n                return _context4.abrupt(\"return\", res.results);\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getAllStarShip() {\n        return _getAllStarShip.apply(this, arguments);\n      }\n\n      return getAllStarShip;\n    }()\n  }, {\n    key: \"getStarShip\",\n    value: function getStarShip(id) {\n      return this.getResource(\"/starships/\".concat(id));\n    }\n  }]);\n\n  return SwapiService;\n}();\n\nvar swapi = new SwapiService(); // swapi.getAllPeople().then((people) => {\n//   people.forEach((p) => {\n//     console.log(p.name);\n//   })\n// });\n\nswapi.getPerson(3).then(function (p) {\n  console.log(p.name);\n});","map":{"version":3,"sources":["/Users/elena/Documents/GA/REACT/star-db/src/index.js"],"names":["SwapiService","_apiBase","url","fetch","res","ok","Error","status","json","getResource","results","id","swapi","getPerson","then","p","console","log","name"],"mappings":";;;;;IACMA,Y;;;;;;SACJC,Q,GAAW,sB;;;;;;;;gDACOC,G;;;;;;;uBACEC,KAAK,WAAI,KAAKF,QAAT,SAAoBC,GAApB,E;;;AAAjBE,gBAAAA,G;;oBACDA,GAAG,CAACC,E;;;;;sBACD,IAAIC,KAAJ,CAAU,0BAAmBJ,GAAnB,yBAAyCE,GAAG,CAACG,MAA7C,CAAV,C;;;;uBAEKH,GAAG,CAACI,IAAJ,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uBAGK,KAAKC,WAAL,Y;;;AAAZL,gBAAAA,G;kDACCA,GAAG,CAACM,O;;;;;;;;;;;;;;;;;;8BAEHC,E,EAAG;AACX,aAAO,KAAKF,WAAL,mBAA4BE,EAA5B,EAAP;AACD;;;;;;;;;;;;;uBAGmB,KAAKF,WAAL,a;;;AAAZL,gBAAAA,G;kDACCA,GAAG,CAACM,O;;;;;;;;;;;;;;;;;;8BAEHC,E,EAAG;AACX,aAAO,KAAKF,WAAL,oBAA6BE,EAA7B,EAAP;AACD;;;;;;;;;;;;;uBAGmB,KAAKF,WAAL,e;;;AAAZL,gBAAAA,G;kDACCA,GAAG,CAACM,O;;;;;;;;;;;;;;;;;;gCAEDC,E,EAAG;AACb,aAAO,KAAKF,WAAL,sBAA+BE,EAA/B,EAAP;AACD;;;;;;AAEH,IAAMC,KAAK,GAAG,IAAIZ,YAAJ,EAAd,C,CACA;AACA;AACA;AACA;AACA;;AAEAY,KAAK,CAACC,SAAN,CAAgB,CAAhB,EAAmBC,IAAnB,CAAwB,UAACC,CAAD,EAAO;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,IAAd;AACH,CAFD","sourcesContent":["\nclass SwapiService {\n  _apiBase = 'https://swapi.co/api';\n  async getResource(url) {\n    const res = await fetch(`${this._apiBase}${url}`);\n    if (!res.ok) {\n      throw new Error(`Could not fetch ${url}` + `, received ${res.status}`)\n    }\n    return await res.json();\n  }\n  async getAllPeople(){\n    const res = await this.getResource(`/people/`);\n    return res.results;\n  }\n  getPerson(id){\n    return this.getResource(`/people/${id}`);\n  }\n\n  async getAllPlanets(){\n    const res = await this.getResource(`/planets/`);\n    return res.results;\n  }\n  getPlanet(id){\n    return this.getResource(`/planets/${id}`);\n  }\n\n  async getAllStarShip(){\n    const res = await this.getResource(`/starships/`);\n    return res.results;\n  }\n  getStarShip(id){\n    return this.getResource(`/starships/${id}`);\n  }\n}\nconst swapi = new SwapiService();\n// swapi.getAllPeople().then((people) => {\n//   people.forEach((p) => {\n//     console.log(p.name);\n//   })\n// });\n\nswapi.getPerson(3).then((p) => {\n    console.log(p.name);\n});\n"]},"metadata":{},"sourceType":"module"}