{"ast":null,"code":"import _classCallCheck from \"/Users/elena/Documents/GA/REACT/star-db/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/elena/Documents/GA/REACT/star-db/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/elena/Documents/GA/REACT/star-db/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/elena/Documents/GA/REACT/star-db/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/elena/Documents/GA/REACT/star-db/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/elena/Documents/GA/REACT/star-db/src/components/random-planet/random-planet.js\";\nimport React, { Component } from 'react';\nimport SwapiService from \"../../services/swapi-service\";\nimport './random-planet.css';\n\nvar RandomPlanet =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RandomPlanet, _Component);\n\n  function RandomPlanet() {\n    var _this;\n\n    _classCallCheck(this, RandomPlanet);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RandomPlanet).call(this));\n    _this.swapiService = new SwapiService();\n\n    _this.onPlanetLoaded = function (planet) {\n      _this.setState({\n        planet: planet\n      });\n    };\n\n    _this.state = {\n      planet: {}\n    };\n\n    _this.updatePlanet();\n\n    return _this;\n  }\n\n  _createClass(RandomPlanet, [{\n    key: \"updatePlanet\",\n    value: function updatePlanet() {\n      var id = Math.floor(Math.random() * 25) + 2;\n      this.swapiService.getPlanet(id).then(this.onPlanetLoaded);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state$planet = this.state.planet,\n          id = _this$state$planet.id,\n          name = _this$state$planet.name,\n          population = _this$state$planet.population,\n          rotationPeriod = _this$state$planet.rotationPeriod,\n          diameter = _this$state$planet.diameter;\n      return React.createElement(\"div\", {\n        className: \"random-planet jumbotron rounded\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"planet-image\",\n        src: \"http://starwars-visualguide.com/assets/img/planets/\".concat(id, \".jpg\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, name), React.createElement(\"ul\", {\n        className: \"list-group list-group-flush\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"term\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"Population\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, population)), React.createElement(\"li\", {\n        className: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"term\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Rotation Period\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, rotationPeriod)), React.createElement(\"li\", {\n        className: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"term\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Diameter\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, diameter)))));\n    }\n  }]);\n\n  return RandomPlanet;\n}(Component);\n\n;\nexport default RandomPlanet;","map":{"version":3,"sources":["/Users/elena/Documents/GA/REACT/star-db/src/components/random-planet/random-planet.js"],"names":["React","Component","SwapiService","RandomPlanet","swapiService","onPlanetLoaded","planet","setState","state","updatePlanet","id","Math","floor","random","getPlanet","then","name","population","rotationPeriod","diameter"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAO,qBAAP;;IACOC,Y;;;;;AAEL,0BAAa;AAAA;;AAAA;;AACX;AADW,UADbC,YACa,GADE,IAAIF,YAAJ,EACF;;AAAA,UAObG,cAPa,GAOI,UAACC,MAAD,EAAY;AAC3B,YAAKC,QAAL,CAAc;AAACD,QAAAA,MAAM,EAANA;AAAD,OAAd;AACD,KATY;;AAEX,UAAKE,KAAL,GAAa;AACXF,MAAAA,MAAM,EAAE;AADG,KAAb;;AAGA,UAAKG,YAAL;;AALW;AAMZ;;;;mCAIc;AACb,UAAMC,EAAE,GAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,EAAzB,IAA6B,CAAvC;AACA,WAAKT,YAAL,CAAkBU,SAAlB,CAA4BJ,EAA5B,EAAgCK,IAAhC,CAAqC,KAAKV,cAA1C;AAED;;;6BACO;AAAA,+BAC+D,KAAKG,KADpE,CACEF,MADF;AAAA,UACWI,EADX,sBACWA,EADX;AAAA,UACeM,IADf,sBACeA,IADf;AAAA,UACqBC,UADrB,sBACqBA,UADrB;AAAA,UACiCC,cADjC,sBACiCA,cADjC;AAAA,UACiDC,QADjD,sBACiDA,QADjD;AAEN,aACE;AAAK,QAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,cAAf;AAA8B,QAAA,GAAG,+DAAwDT,EAAxD,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMM,IAAN,CADF,EAEE;AAAI,QAAA,SAAS,EAAC,6BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQC,UAAR,CAFF,CADA,EAME;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQC,cAAR,CAFF,CANF,EAWE;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQC,QAAR,CAFF,CAXF,CAFF,CAFA,CADF;AAyBD;;;;EA5CyBlB,S;;AA8C3B;AACD,eAAeE,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport SwapiService from \"../../services/swapi-service\"\nimport './random-planet.css';\nclass  RandomPlanet extends Component {\n  swapiService = new SwapiService();\n  constructor(){\n    super();\n    this.state = {\n      planet: {}\n    };\n    this.updatePlanet();\n  }\n  onPlanetLoaded = (planet) => {\n    this.setState({planet});\n  }\n  updatePlanet() {\n    const id =Math.floor(Math.random()*25)+2;\n    this.swapiService.getPlanet(id).then(this.onPlanetLoaded);\n\n  }\n  render(){\n    const { planet: {id, name, population, rotationPeriod, diameter} } = this.state;\n    return(\n      <div className=\"random-planet jumbotron rounded\">\n      <img className=\"planet-image\" src={`http://starwars-visualguide.com/assets/img/planets/${id}.jpg`} />\n      <div>\n        <h4>{ name }</h4>\n        <ul className=\"list-group list-group-flush\">\n        <li className=\"list-group-item\">\n          <span className=\"term\">Population</span>\n          <span>{ population }</span>\n        </li>\n\n          <li className=\"list-group-item\">\n            <span className=\"term\">Rotation Period</span>\n            <span>{ rotationPeriod }</span>\n          </li>\n\n          <li className=\"list-group-item\">\n            <span className=\"term\">Diameter</span>\n            <span>{ diameter }</span>\n          </li>\n          </ul>\n      </div>\n      </div>\n\n    );\n  }\n\n};\nexport default RandomPlanet;\n"]},"metadata":{},"sourceType":"module"}